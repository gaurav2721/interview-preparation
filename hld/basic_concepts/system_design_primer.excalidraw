{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "xYdXDbTLcwm7JcVBjX3hB",
      "type": "text",
      "x": 290,
      "y": 79,
      "width": 289.57586669921875,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a2",
      "roundness": null,
      "seed": 2068208360,
      "version": 27,
      "versionNonce": 1956873704,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1715291794819,
      "link": null,
      "locked": false,
      "text": "System Design Primer",
      "fontSize": 28,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "System Design Primer",
      "lineHeight": 1.25
    },
    {
      "id": "418t52t11yPDtveEg1f7M",
      "type": "text",
      "x": 293.75390625,
      "y": 142,
      "width": 1395.04345703125,
      "height": 630,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a3",
      "roundness": null,
      "seed": 2068270488,
      "version": 1096,
      "versionNonce": 319767960,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1715292812156,
      "link": null,
      "locked": false,
      "text": "Think of the following things\n1. Code should be tuned for memory and performance , user patterns can be taken care of by using \npush pull architectures\n2. Horizontal(buying more machines , more available , less consistent , scalble , slower since has RPC\ncalls ) \nand vertical scaling(increaing capacity of the machines that isadding RAM , faster since has \ninterprocess communication)\n3. Monolithic and microservices architecture(separation of concerns is there and different \nservices can be scaled differently) \n4. Preprocessing & Cron Job\n5. Master Slave architecture\n6. Distributed services (replicas running in different geographies , helps in giving \nquick responses , available concensus algorithms)\n7. Orchestrator\n8. Keeping backups for protection\n9. Load Balancer\n10. Decoupling (that is communication just using the interface)\n",
      "fontSize": 28,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Think of the following things\n1. Code should be tuned for memory and performance , user patterns can be taken care of by using \npush pull architectures\n2. Horizontal(buying more machines , more available , less consistent , scalble , slower since has RPC\ncalls ) \nand vertical scaling(increaing capacity of the machines that isadding RAM , faster since has \ninterprocess communication)\n3. Monolithic and microservices architecture(separation of concerns is there and different \nservices can be scaled differently) \n4. Preprocessing & Cron Job\n5. Master Slave architecture\n6. Distributed services (replicas running in different geographies , helps in giving \nquick responses , available concensus algorithms)\n7. Orchestrator\n8. Keeping backups for protection\n9. Load Balancer\n10. Decoupling (that is communication just using the interface)\n",
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}