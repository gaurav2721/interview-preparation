/* the intuition is from largest next element and largest previous element*/
func trap(height []int) int {
	n := len(height)
	right := make([]int, n)
	right[n-1] = 0
	for i := n - 2; i >= 0; i-- {
		right[i] = max(height[i+1], right[i+1])
	}

	left := make([]int, n)
	left[0] = 0
	for i := 1; i < n; i++ {
		left[i] = max(height[i-1], left[i-1])
	}

	//fmt.Println(left,right)

	totalArea := 0
	for i := 0; i < n; i++ {
		area := min(left[i], right[i]) - height[i]
		if area <= 0 {
			continue
		}
		totalArea += area
	}

	return totalArea
}