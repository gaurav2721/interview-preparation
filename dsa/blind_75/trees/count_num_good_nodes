/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */

/*
This is a wrapper over Pre order traversal
*/

func isGreater(path []int, a int) bool {
	isGreater := false
	for _, val := range path {
		if val > a {
			isGreater = true
			break
		}
	}
	return isGreater
}

func util(root *TreeNode, path []int, result *[]int) {
	//fmt.Println(root,path,*result)
	if root == nil {
		return
	}
	if !isGreater(path, root.Val) {
		*result = append(*result, root.Val)
	}
	path = append(path, root.Val)
	util(root.Left, path, result)
	util(root.Right, path, result)
}

func goodNodes(root *TreeNode) int {
	result := make([]int, 0)
	util(root, make([]int, 0), &result)
	fmt.Println(result)
	return len(result)
}