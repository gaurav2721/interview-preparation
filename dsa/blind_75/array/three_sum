func threeSum(nums []int) [][]int {
	m := make(map[[3]int]bool, 0)
	n := len(nums)
	sort.Ints(nums)
	for i := 0; i < n-2; i++ {
		for j := i + 1; j < n-1; j++ {
			temp := nums[j+1:]
			rem := -nums[i] - nums[j]
			index := sort.Search(len(temp), func(i int) bool {
				if rem <= temp[i] {
					return true
				}
				return false
			})
			if index >= 0 && index < n-j-1 && temp[index] == rem {
				a := [3]int{nums[i], nums[j], rem}
				m[a] = true
			}
		}
	}

	ret := make([][]int, 0)
	for k, _ := range m {
		temp := []int{k[0], k[1], k[2]}
		ret = append(ret, temp)
	}
	return ret
}