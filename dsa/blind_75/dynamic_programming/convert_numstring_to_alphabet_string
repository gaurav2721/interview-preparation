// the main trick in this is to recognise when it is within range 
if i==n-1{
    if 9>=s[i]>0{
        d[i]=1
    }else{
        d[i]=0
    }
}else if i==n-2{
    if 26>=s[i:]>0{
        d[i]++
    }
    if s[i]>0 && s[i+1]>0  {
        d[i]++
    }
}
d[i]=0
if s[i]>'0'{
    d[i]+=d[i+1]
}else if s[i:i+2]<=26{
    d[i]+=d[i+2]
}
*/
import (
    "strconv"
)
func withinRange(s string)bool{
    fmt.Println(s)
    l:=len(s)
    n,_:=strconv.Atoi(s)
    if l==1{// the number is single
        if n>0&&n<=9{
            return true
        }
    }else if l==2{
        if n>=10 && n<=26{
            return true
        }
    }
    return false
}
func numDecodings(s string) int {
    n:=len(s)
    if n==1{
        if withinRange(s){
            return 1
        }else{
            return 0
        }
    }
    p:=make([]int,n)
    for i:=n-1;i>=0;i--{
        if i==n-1{
            if withinRange(s[i:]){
                p[i]++
            }
        }else if i==n-2{
            if withinRange(s[i:]){
                p[i]++
            }
            if withinRange(s[i:i+1])&&withinRange(s[i+1:]){
                p[i]++
            }
        }else{
            //fmt.Println(i)
            if withinRange(s[i:i+1]){
                p[i]+=p[i+1]
            }
            if withinRange(s[i:i+2]){
                p[i]+=p[i+2]
            }
        }
    }
    fmt.Println(p)
    return p[0]
}