Number of 1 Bits

Solution
func hammingWeight(n int) int {
    fmt.Println(n)
    if n<1{
        return 0
    }

    count:=0

    for n>=1{
        if n%2 ==1{
            count++
        }
        n=n>>1
        fmt.Println(n)
    }
    return count
    //return bits.OnesCount(uint(n))
}

Time Complexity : O(1) - the logic is that atmost 32 loops will be run since there are 32 bits
Space Complexity : O(1) 