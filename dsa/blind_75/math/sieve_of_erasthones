func isPrime(a int)bool{
    if a==0 || a==1 {
        return false
    }else if a==2 || a==3{
        return true
    }

    limit:=int(math.Sqrt(float64(a)))
    for i:=2;i<=limit;i++{
        if a%i==0{
            return false
        }
    }
    return true
}

func countPrimes(n int) int {
    if n==0 || n==1{
        return 0
    }
    count:=0
    isComposite:=make([]bool,n+1)
    isComposite[0]=false
    isComposite[1]=false
    //isComposite[2]=true

    for i:=2;i<n;i++{
        if !isComposite[i]{
            count++
            for j:=1;j*i<=n;j++{
                isComposite[j*i]=true
            }
        }
    }
    //fmt.Println(isComposite)
    return count
}


