/*
This can be done in O(n) space complexity and O(1) as well by using sliding window
*/

func maxProfit(prices []int) int {
	n := len(prices)
	if n == 1 {
		return 0
	}

	left, right := 0, 1
	maxProfit := 0
	for left < right && right < n {
		if prices[left] < prices[right] {
			diff := prices[right] - prices[left]
			maxProfit = max(maxProfit, diff)
			right++
		} else {
			left = right
			right++
		}
	}
	return maxProfit
}